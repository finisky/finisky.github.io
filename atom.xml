<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Finisky Garden</title>
  <icon>https://finisky.github.io/icon.png</icon>
  <subtitle>NLP, 软件工程, 产品设计</subtitle>
  <link href="https://finisky.github.io/atom.xml" rel="self"/>
  
  <link href="https://finisky.github.io/"/>
  <updated>2023-02-15T09:47:17.000Z</updated>
  <id>https://finisky.github.io/</id>
  
  <author>
    <name>finisky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大模型训练不稳定问题及解决方案</title>
    <link href="https://finisky.github.io/llm-training-instability-solution/"/>
    <id>https://finisky.github.io/llm-training-instability-solution/</id>
    <published>2023-02-15T02:08:12.000Z</published>
    <updated>2023-02-15T09:47:17.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;大规模语言模型的春风已经吹遍大地，大家都惊叹于大模型出色的对话能力，但是在训练大模型时遇到的训练不稳定问题(&lt;strong&gt;training
instabilities&lt;/strong&gt;)，可能关注的人并不太多。所谓量变引起质变，模型每大一个量级，就可能会出现一些意想不到的问题，比如莫名其妙的训练崩溃。当然，也有好的方面，在模型有一定规模后，是否有可能表现出一些弱智能，也很难说。&lt;/p&gt;
&lt;p&gt;言归正传，今天聊聊在训练10B以上模型时遇到的训练不稳定现象，问题原因及当前的解法。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>Google拟发布ChatGPT的竞争对手Bard</title>
    <link href="https://finisky.github.io/google-open-bard-to-trusted-testers/"/>
    <id>https://finisky.github.io/google-open-bard-to-trusted-testers/</id>
    <published>2023-02-08T11:55:39.000Z</published>
    <updated>2023-02-08T11:57:54.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;ChatGPT的大火让Google也坐不住了，许多人认为这一波Google已落后一个身位。坊间甚至传言创始人谢尔盖・布林都已“躬身入局”，亲自写代码了。上面的说法可以当八卦看来一乐，不过昨天微软官宣Bing和Edge浏览器要集成ChatGPT时，Google也不甘示弱，表示也要上线大模型&lt;code&gt;Bard&lt;/code&gt;
(这个名字倒也颇具浪漫主义气质：吟游诗人)。&lt;/p&gt;</summary>
    
    
    
    <category term="News" scheme="https://finisky.github.io/categories/News/"/>
    
    
  </entry>
  
  <entry>
    <title>大模型分布式训练的并行策略</title>
    <link href="https://finisky.github.io/how-to-train-large-language-model/"/>
    <id>https://finisky.github.io/how-to-train-large-language-model/</id>
    <published>2023-02-02T15:32:10.000Z</published>
    <updated>2023-02-08T11:57:54.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;随着神经网络模型规模的不断增大，对硬件的显存和算力提出了新的要求。首先模型参数过多，导致单机内存放不下，即使能放得下，算力也跟不上。同时，硬件算力的增长远远比不上模型增长的速度，单机训练变得不再可行，需要并行化分布式训练加速。比如&lt;code&gt;Megatron-Turing NLG&lt;/code&gt;有
530B 的参数，训练需要超过 10T 的内存来存储权重、梯度和状态。&lt;/p&gt;
&lt;p&gt;&lt;img
src=&quot;https://coriva.eu.org/images/nlp/trendofnlpmodelsize.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;同时，模型是一个有机的整体，简单增加机器数量并不能提升算力，需要有并行策略和通信设计，才能实现高效的并行训练。本文简要介绍目前主流的几种并行策略：数据并行，张量并行，流水线并行和混合并行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/2201.11990&quot;&gt;# Using DeepSpeed and
Megatron to Train Megatron-Turing NLG 530B, A Large-Scale Generative
Language Model&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT推出了收费版，每月20刀</title>
    <link href="https://finisky.github.io/chatgpt-plus/"/>
    <id>https://finisky.github.io/chatgpt-plus/</id>
    <published>2023-02-02T02:19:00.000Z</published>
    <updated>2023-02-08T11:57:54.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;近来被人们玩坏的ChatGPT推出了收费订阅&lt;code&gt;ChatGPT Plus&lt;/code&gt;，每月20刀，提供更好的可用性，更快的回复时间，和提前试用新功能的权益。&lt;/p&gt;
&lt;p&gt;这个订阅目前仅对美国地区开放，先从之前登记的waitlist上邀请试用，后续会开放更多国家和地区。&lt;/p&gt;
&lt;p&gt;好消息是免费版继续可用，推出收费版后可以更好地服务于更多的免费用户。&lt;/p&gt;</summary>
    
    
    
    <category term="News" scheme="https://finisky.github.io/categories/News/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo Set Environment Variable</title>
    <link href="https://finisky.github.io/en/how-to-set-hexo-env/"/>
    <id>https://finisky.github.io/en/how-to-set-hexo-env/</id>
    <published>2023-01-28T03:28:52.000Z</published>
    <updated>2023-01-28T03:31:50.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Recently I upgrade NexT theme to v8.14.1. The related post plugin
&lt;code&gt;hexo-related-popular-posts&lt;/code&gt; had been replaced by
&lt;code&gt;hexo-related-posts&lt;/code&gt;, which generates related posts by tf-idf
algorithm. However, the compute cost is a little bit heavy if you have
many posts. A good trade-off is enable this feature only for production
environment. The plugin &lt;a
href=&quot;https://github.com/sergeyzwezdin/hexo-related-posts&quot;&gt;hexo-related-posts&lt;/a&gt;
already takes this into account and use &lt;code&gt;enable_env_name&lt;/code&gt; to
disable its execution. Unfortunately, the document has typo so I takes
some time to fix it.&lt;/p&gt;
&lt;p&gt;So how to set environment variable in Hexo?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Short
Answer&lt;/strong&gt;：&lt;code&gt;$ hexo &amp;lt;command&amp;gt; --&amp;lt;env_key&amp;gt; env_value&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;The following secitons will illustrate how to enable related post on
production.&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://finisky.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://finisky.github.io/tags/Hexo/"/>
    
    <category term="NexT" scheme="https://finisky.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Hexo环境变量区分生产环境</title>
    <link href="https://finisky.github.io/how-to-set-hexo-env/"/>
    <id>https://finisky.github.io/how-to-set-hexo-env/</id>
    <published>2023-01-27T16:42:27.000Z</published>
    <updated>2023-01-27T16:50:30.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近升级NexT主题到最新版v8.14.1，相关文章功能从v8.10开始由&lt;code&gt;hexo-related-popular-posts&lt;/code&gt;替换成了&lt;code&gt;hexo-related-posts&lt;/code&gt;，后者是用tf-idf算法对文章全文进行相似度计算而得相关文章，比&lt;code&gt;hexo-related-popular-posts&lt;/code&gt;要精准和先进一些，不过副作用是计算量变大，在文章数较多的情况下运行会比较慢，这样在写完文章后用&lt;code&gt;hexo s&lt;/code&gt;进行本地调试效率就变低了，每次文章修改都要重新计算一遍tf-idf。好在
&lt;a
href=&quot;https://github.com/sergeyzwezdin/hexo-related-posts&quot;&gt;hexo-related-posts&lt;/a&gt;
考虑到了此问题，可以通过设置&lt;code&gt;enable_env_name&lt;/code&gt;变量，只在特定环境(如生产环境)中才开启此功能。不过文档略有些问题，费了一番周折才设置环境变量成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;短答案&lt;/strong&gt;：&lt;code&gt;$ hexo &amp;lt;command&amp;gt; --&amp;lt;env_key&amp;gt; env_value&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;长答案：本文介绍了如何使用环境变量仅在生产环境开启相关文章功能。&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://finisky.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://finisky.github.io/tags/Hexo/"/>
    
    <category term="NexT" scheme="https://finisky.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>ETA 2824-2 机芯保养手册</title>
    <link href="https://finisky.github.io/eta-2824-2-manual/"/>
    <id>https://finisky.github.io/eta-2824-2-manual/</id>
    <published>2023-01-26T05:06:00.000Z</published>
    <updated>2023-01-30T07:57:08.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;ETA 2824-2
是经典的瑞士机芯之一，稳定、准确度高。网上也有一个很好的拆解点油视频：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1qJ411v7nQ/&quot;&gt;#
ETA2824机芯的保养与拆解组装过程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不过关于2824机芯的手册百度很难搜到免费下载，在此与表友共享。&lt;/p&gt;</summary>
    
    
    
    <category term="Life" scheme="https://finisky.github.io/categories/Life/"/>
    
    
  </entry>
  
  <entry>
    <title>Training Compute-Optimal Large Language Models 简读</title>
    <link href="https://finisky.github.io/training-compute-optimal-large-language-models-summary/"/>
    <id>https://finisky.github.io/training-compute-optimal-large-language-models-summary/</id>
    <published>2023-01-24T09:26:43.000Z</published>
    <updated>2023-01-24T09:57:45.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;DeepMind去年在 NeurIPS 2022
发表了一篇如何在给定计算资源条件下，用多少tokens训练最优大小的 Large
Language Models
(LLM)。之前的许多工作都仅专注于扩大模型规模，而并不增加训练数据规模，导致这些模型显著地训练不到位
(undertrained)。DeepMind训练用不同规模的数据 (从5B到500B tokens)
训练超过400个不同大小的模型 (从70M到超过16B)，发现
&lt;strong&gt;模型和训练数据规模需要同比增大&lt;/strong&gt;。根据这个假设，使用与
Gopher (280B) 同样的计算量且4倍的数据，训练了70B的最优模型
Chinchilla。它在许多下游任务上的性能显著超过了 Gopher (280B), GPT-3
(175B) Jurassic-1 (178B) 和 Megatron-Turing NLG (530B)。&lt;/p&gt;
&lt;p&gt;[NeurIPS 2022] &lt;a
href=&quot;https://openreview.net/pdf?id=iBBcRUlOAPR&quot;&gt;Training
Compute-Optimal Large Language Models&lt;/a&gt; &lt;a
href=&quot;https://arxiv.org/abs/2203.15556&quot;&gt;Training Compute-Optimal Large
Language Models&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文的 Chinchilla 也是后续对话系统 &lt;a
href=&quot;/sparrow-summary/&quot;&gt;Sparrow&lt;/a&gt; 的基模型。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>微软与ChatGPT联手会带来什么？</title>
    <link href="https://finisky.github.io/why-microsoft-buy-chatgpt/"/>
    <id>https://finisky.github.io/why-microsoft-buy-chatgpt/</id>
    <published>2023-01-23T02:49:00.000Z</published>
    <updated>2023-01-23T10:07:16.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近微软投资ChatGPT的消息甚嚣尘上，二者的联手会给产业和用户带来什么？&lt;/p&gt;
&lt;p&gt;&lt;a
href=&quot;https://www.reuters.com/technology/microsoft-talks-invest-10-bln-chatgpt-owner-semafor-2023-01-10/&quot;&gt;#
Microsoft in talks to invest $10 bln in ChatGPT-owner OpenAI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从新闻上来看，微软会将ChatGPT集成到Office和Bing
Search。但实际情况可能不止于此，微软擅长做平台，CVP已经在&lt;a
href=&quot;https://azure.microsoft.com/en-us/blog/general-availability-of-azure-openai-service-expands-access-to-large-advanced-ai-models-with-added-enterprise-benefits/&quot;&gt;Azure
Blog&lt;/a&gt;称ChatGPT将不久在Azure OpenAI Service上可用:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Customers will also be able to access ChatGPT—a fine-tuned version of
GPT-3.5 that has been trained and runs inference on Azure AI
infrastructure—through Azure OpenAI Service soon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好消息是这个服务可以直接让中小企业基于API研发产品而无须自行研发模型。坏消息是它的效果太好以至于自己训练的模型不能达到同水平的效果，形成对此底层服务的强依赖。&lt;/p&gt;</summary>
    
    
    
    <category term="Product" scheme="https://finisky.github.io/categories/Product/"/>
    
    
    <category term="Product" scheme="https://finisky.github.io/tags/Product/"/>
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>Git Sync Remote Branch Automatically by Webhook</title>
    <link href="https://finisky.github.io/en/git-sync-remote-branch-automatically-by-webhook/"/>
    <id>https://finisky.github.io/en/git-sync-remote-branch-automatically-by-webhook/</id>
    <published>2023-01-08T15:01:23.000Z</published>
    <updated>2023-01-24T14:30:12.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;How to make your local repository always sync with GitHub repository?
The answer is webhook.&lt;/p&gt;
&lt;p&gt;When the repo received a push event, GitHub will send a
&lt;code&gt;POST&lt;/code&gt; request to the webhook URL with details of any
subscribed events. What we need to do is to implement a webhook (on
local side) which performs &lt;code&gt;git pull&lt;/code&gt; to keep sync with
remote.&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://finisky.github.io/categories/Linux/"/>
    
    
    <category term="python" scheme="https://finisky.github.io/tags/python/"/>
    
    <category term="Linux" scheme="https://finisky.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>2022 对话系统进展</title>
    <link href="https://finisky.github.io/dialog-system-progress-2022/"/>
    <id>https://finisky.github.io/dialog-system-progress-2022/</id>
    <published>2023-01-08T04:29:09.000Z</published>
    <updated>2023-02-08T06:43:06.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;2022年随着ChatGPT的大火而结束，最近一年的时间各巨头相继推出了许多表现出色的对话系统，有意思的是大家前进的方向不谋而合，不再专注模型结构和规模，而转向实用性：如何让一个对话系统更有用、更安全、更理解用户意图？&lt;/p&gt;
&lt;p&gt;对话系统在过去一年里的主要提升得益如下三点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;大模型&lt;/strong&gt;：对话系统的基础，规模大才有足够的通用表示能力&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从人工反馈学习
(RLHF)&lt;/strong&gt;：通过人工标注不同模型输出，使模型更好地与用户意图align，甚至更小的模型可达到同样效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;搜索API&lt;/strong&gt;：使回复有所参考，内容更具体更有用，避免胡说八道
(hallucination)&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
    <category term="Reinforcement Learning" scheme="https://finisky.github.io/tags/Reinforcement-Learning/"/>
    
  </entry>
  
  <entry>
    <title>BlenderBot 3 对话系统简析</title>
    <link href="https://finisky.github.io/blenderbot3-summary/"/>
    <id>https://finisky.github.io/blenderbot3-summary/</id>
    <published>2023-01-06T12:12:01.000Z</published>
    <updated>2023-01-06T16:01:46.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Meta AI在2022年8月发布了新一代的对话系统 BlenderBot
3，希望通过这样一个公开的demo收集更多的真实数据来改进对话系统，使它变得更安全、更有用。&lt;/p&gt;
&lt;p&gt;&lt;a
href=&quot;https://ai.facebook.com/blog/blenderbot-3-a-175b-parameter-publicly-available-chatbot-that-improves-its-skills-and-safety-over-time/&quot;&gt;BlenderBot
3: A 175B parameter, publicly available chatbot that improves its skills
and safety over time&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/2208.03188&quot;&gt;BlenderBot 3: a deployed
conversational agent that continually learns to responsibly
engage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;BlenderBot 3 (BB3) 只对在美国的成人开放，只用英文对话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We present BlenderBot 3 (BB3), an open-domain dialogue model that we
have deployed as an English speaking conversational agent on a public
website accessible by adults in the United States.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此研究的主要目的与&lt;a
href=&quot;/sparrow-summary/&quot;&gt;Sparrow&lt;/a&gt;最接近，使对话更responsible &amp;amp;
useful:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The goal of this research program is then to explore how to construct
models that continue to improve from such interactions both in terms of
becoming more responsible and more useful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个tech
report包括了BB3部署的细节，包括UI设计，本文主要关注模型部分。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>DeepMind Sparrow 对话系统简析</title>
    <link href="https://finisky.github.io/sparrow-summary/"/>
    <id>https://finisky.github.io/sparrow-summary/</id>
    <published>2022-12-27T12:06:39.000Z</published>
    <updated>2022-12-27T12:35:06.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Sparrow是DeepMind在今年9月底发布的对话系统，主打的点在&quot;helpful,
correct, and
harmless&quot;。总体来看，思路也是&quot;alignment&quot;，即让对话机器人的回复与用户的意图更贴合。在技术路线上，也是采用reinforcement
learning from human
feedback，通过定义一批规则，让模型更好地向期望的对话方向推进;
此外，对于事实型的问题，参考搜索出的内容给出回复。&lt;/p&gt;
&lt;p&gt;&lt;a
href=&quot;https://www.deepmind.com/blog/building-safer-dialogue-agents&quot;&gt;Building
safer dialogue agents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/2209.14375&quot;&gt;Improving alignment of
dialogue agents via targeted human judgements&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
    <category term="Reinforcement Learning" scheme="https://finisky.github.io/tags/Reinforcement-Learning/"/>
    
  </entry>
  
  <entry>
    <title>为什么不接ChatGPT到微信公号？</title>
    <link href="https://finisky.github.io/chatgpt-for-official-account/"/>
    <id>https://finisky.github.io/chatgpt-for-official-account/</id>
    <published>2022-12-16T02:08:02.000Z</published>
    <updated>2022-12-16T02:42:55.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;ChatGPT火爆全网，要是能接到自己的微信公众号后台，岂不美哉？&lt;/p&gt;
&lt;p&gt;想必有此想法的同志不止我一人，上周末就研究了一下，有几个问题需要解决。&lt;/p&gt;
&lt;p&gt;首先就是ChatGPT
API，最关键的问题没有之一，OpenAI并没有官方API支持。不过github上早有人反向工程破解了此API，Python实现：&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>WebGPT 简读</title>
    <link href="https://finisky.github.io/webgpt-summary/"/>
    <id>https://finisky.github.io/webgpt-summary/</id>
    <published>2022-12-13T10:24:46.000Z</published>
    <updated>2023-01-01T10:54:32.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;WebGPT是OpenAI在2021年底发布的解决long-form quesion-answering (LFQA)
的方案。比InstructGPT的提出稍早一些。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://openai.com/blog/webgpt/&quot;&gt;WebGPT: Improving the
Factual Accuracy of Language Models through Web Browsing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/2112.09332&quot;&gt;WebGPT: Browser-assisted
question-answering with human feedback&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebGPT想解决什么问题？让开放域QA回复更长更可靠。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A rising challenge in NLP is long-form question-answering (LFQA), in
which a paragraph-length answer is generated in response to an
open-ended question. LFQA systems have the potential to become one of
the main ways people learn about the world, but currently lag behind
human performance.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
    <category term="Reinforcement Learning" scheme="https://finisky.github.io/tags/Reinforcement-Learning/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT的未解难题</title>
    <link href="https://finisky.github.io/chatgpt-limitations/"/>
    <id>https://finisky.github.io/chatgpt-limitations/</id>
    <published>2022-12-10T10:12:01.000Z</published>
    <updated>2022-12-10T10:24:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;整个圈子最近都被ChatGPT出色的对话和Coding能力惊艳到了，前面写了篇文章简析了下其原理，虽然看起来直观，但国内的对话水平与其差距确非一日之功。下面的知乎回答深以为然：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://coriva.eu.org/images/nlp/whynochatgpt.png&quot;
alt=&quot;Why China Doesn&amp;#39;t Have ChatGPT&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://openai.com/blog/chatgpt/&quot;&gt;ChatGPT: Optimizing
Language Models for Dialogue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;既然大家都致力于发掘ChatGPT厉害的地方，就来找找它的不足吧。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
  </entry>
  
  <entry>
    <title>InstructGPT/ChatGPT 简读</title>
    <link href="https://finisky.github.io/instructgpt-summary/"/>
    <id>https://finisky.github.io/instructgpt-summary/</id>
    <published>2022-12-10T03:43:52.000Z</published>
    <updated>2022-12-10T10:24:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近ChatGPT火爆出圈，一众朋友发来各种网红文问我怎么看。ChatGPT的模型与InstructGPT一样，只是数据收集方式有区别。而InstructGPT的提出已差不多有一年了，只不过最近才引起大家的注意。其实，今年已经有不少工作是延续InstructGPT对提升模型效果的，如
&lt;a href=&quot;/diamonte-dataset-paper-summary/&quot;&gt;Diamonte&lt;/a&gt;，参考了human
feedback的思路，但将RL的方案替换成了额外的loss fuction项；&lt;a
href=&quot;/welm-paper-summary/&quot;&gt;WeLM&lt;/a&gt;，参考了人工编写prompt模板训练大规模语言模型。&lt;/p&gt;
&lt;p&gt;话不多说，来看看原始的InstructGPT是如何打败大模型的。原始Paper很长，有68页，而事实上核心思想并不复杂。（PS:
现在训练个大模型要不写个50页以上的Paper，都对不起咱烧的那钱！）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/2203.02155&quot;&gt;Training language models
to follow instructions with human feedback&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://openai.com/blog/instruction-following/&quot;&gt;Aligning
Language Models to Follow Instructions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;InstructGPT指出，模型并非越大越好：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Making language models bigger does not inherently make them better at
following a user’s intent. For example, large language models can
generate outputs that are untruthful, toxic, or simply not helpful to
the user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以InstrcutGPT希望&lt;strong&gt;通过人工反馈让语言模型与用户意图更加align&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We show an avenue for aligning language models with user intent on a
wide range of tasks by fine-tuning with human feedback.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最终训练出来1.3B的InstructGPT模型，人工评测比175B的GPT-3要更好：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In human evaluations on our prompt distribution, outputs from the
1.3B parameter InstructGPT model are preferred to outputs from the 175B
GPT-3, despite having 100x fewer parameters.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="https://finisky.github.io/tags/Machine-Learning/"/>
    
    <category term="NLP" scheme="https://finisky.github.io/tags/NLP/"/>
    
    <category term="Transformer" scheme="https://finisky.github.io/tags/Transformer/"/>
    
    <category term="NLG" scheme="https://finisky.github.io/tags/NLG/"/>
    
    <category term="Language Model" scheme="https://finisky.github.io/tags/Language-Model/"/>
    
    <category term="Reinforcement Learning" scheme="https://finisky.github.io/tags/Reinforcement-Learning/"/>
    
  </entry>
  
  <entry>
    <title>When Using Proxy in Chrome, DNS Is Performed on Which Side?</title>
    <link href="https://finisky.github.io/en/chrome-using-proxy-dns-is-done-client-side-or-proxy-side/"/>
    <id>https://finisky.github.io/en/chrome-using-proxy-dns-is-done-client-side-or-proxy-side/</id>
    <published>2022-11-27T11:52:41.000Z</published>
    <updated>2023-01-24T14:30:12.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;When using proxy (e.g. SwitchyOmega) in Chrome, name resolution (DNS)
is performed on client side or proxy side? Let&#39;s explore how it
works.&lt;/p&gt;
&lt;p&gt;The test in this post is done by Chrome 107.0.5304.107, SwitchyOmega
with &lt;strong&gt;HTTP&lt;/strong&gt; proxy.&lt;/p&gt;</summary>
    
    
    
    <category term="Networking" scheme="https://finisky.github.io/categories/Networking/"/>
    
    
    <category term="Networking" scheme="https://finisky.github.io/tags/Networking/"/>
    
  </entry>
  
  <entry>
    <title>Chrome加代理使用本地DNS还是远程DNS？</title>
    <link href="https://finisky.github.io/chrome-using-proxy-dns-is-done-client-side-or-proxy-side/"/>
    <id>https://finisky.github.io/chrome-using-proxy-dns-is-done-client-side-or-proxy-side/</id>
    <published>2022-11-27T11:26:36.000Z</published>
    <updated>2022-11-27T11:54:21.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;如果在Chrome中使用SwitchyOmega插件进行网络代理，那么DNS是走的本地DNS还是代理服务器的DNS？我们来验证一下。&lt;/p&gt;
&lt;p&gt;本测试使用 Chrome
107.0.5304.107，SwitchyOmega中的&lt;strong&gt;HTTP&lt;/strong&gt;代理。&lt;/p&gt;</summary>
    
    
    
    <category term="Networking" scheme="https://finisky.github.io/categories/Networking/"/>
    
    
    <category term="Networking" scheme="https://finisky.github.io/tags/Networking/"/>
    
  </entry>
  
  <entry>
    <title>ENOTDIR: not a directory, open package.json Solution</title>
    <link href="https://finisky.github.io/en/npm-enotdir-error-solution/"/>
    <id>https://finisky.github.io/en/npm-enotdir-error-solution/</id>
    <published>2022-11-16T11:36:00.000Z</published>
    <updated>2023-01-24T14:30:12.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;When I install elasticdump, the following error appears:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; elasticdump
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; WARN @1.0.0 No description
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; WARN @1.0.0 No repository field.
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; Linux &lt;span class=&quot;token number&quot;&gt;5.4&lt;/span&gt;.0-1091-azure
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; argv &lt;span class=&quot;token string&quot;&gt;&quot;/usr/bin/node&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/usr/bin/npm&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;install&quot;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;elasticdump&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;node&lt;/span&gt; v8.10.0
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt;  v3.5.2
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; path /home/finisky/node_modules/.staging/@types/node-1f2b596d/package.json
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; code ENOTDIR
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; errno &lt;span class=&quot;token parameter variable&quot;&gt;-20&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; syscall &lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; ERR&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; ENOTDIR: not a directory, &lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/home/finisky/node_modules/.staging/@types/node-1f2b596d/package.json&#39;&lt;/span&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://finisky.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://finisky.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
